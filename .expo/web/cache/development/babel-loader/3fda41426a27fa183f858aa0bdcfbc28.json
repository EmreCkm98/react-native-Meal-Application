{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\emre\\\\react-native-ders\\\\r-native-udemy\\\\MealApp\\\\screens\\\\CategoryMealsScreen.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CATEGORIES, MEALS } from \"../data/dummy-data\";\nimport MealList from \"../components/MealList\";\n\nvar CategoryMealsScreen = function CategoryMealsScreen(props) {\n  var catId = props.navigation.getParam(\"categoryId\");\n  var displayedMeals = MEALS.filter(function (meal) {\n    return meal.categoryIds.indexOf(catId) >= 0;\n  });\n  return React.createElement(MealList, {\n    listData: displayedMeals,\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  });\n};\n\nCategoryMealsScreen.navigationOptions = function (navigationData) {\n  var catId = navigationData.navigation.getParam(\"categoryId\");\n  var selectedCategory = CATEGORIES.find(function (cat) {\n    return cat.id === catId;\n  });\n  return {\n    headerTitle: selectedCategory.title\n  };\n};\n\nexport default CategoryMealsScreen;","map":{"version":3,"sources":["C:/Users/emre/react-native-ders/r-native-udemy/MealApp/screens/CategoryMealsScreen.js"],"names":["React","CATEGORIES","MEALS","MealList","CategoryMealsScreen","props","catId","navigation","getParam","displayedMeals","filter","meal","categoryIds","indexOf","navigationOptions","navigationData","selectedCategory","find","cat","id","headerTitle","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAUA,SAASC,UAAT,EAAqBC,KAArB;AACA,OAAOC,QAAP;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAIrC,MAAMC,KAAK,GAAGD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,CAAd;AAEA,MAAMC,cAAc,GAAGP,KAAK,CAACQ,MAAN,CACrB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,WAAL,CAAiBC,OAAjB,CAAyBP,KAAzB,KAAmC,CAA7C;AAAA,GADqB,CAAvB;AAIA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEG,cAApB;AAAoC,IAAA,UAAU,EAAEJ,KAAK,CAACE,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAoBD,CA9BD;;AAgCAH,mBAAmB,CAACU,iBAApB,GAAwC,UAACC,cAAD,EAAoB;AAE1D,MAAMT,KAAK,GAAGS,cAAc,CAACR,UAAf,CAA0BC,QAA1B,CAAmC,YAAnC,CAAd;AAEA,MAAMQ,gBAAgB,GAAGf,UAAU,CAACgB,IAAX,CAAgB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,EAAJ,KAAWb,KAApB;AAAA,GAAhB,CAAzB;AAEA,SAAO;AACLc,IAAAA,WAAW,EAAEJ,gBAAgB,CAACK;AADzB,GAAP;AAGD,CATD;;AAYA,eAAejB,mBAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  Platform,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\nimport { CATEGORIES, MEALS } from \"../data/dummy-data\";\r\nimport MealList from \"../components/MealList\";\r\n\r\nconst CategoryMealsScreen = (props) => {\r\n\r\n\r\n  //category ekranından params ile gelen veriyi alıcaz.\r\n  const catId = props.navigation.getParam(\"categoryId\");\r\n\r\n  const displayedMeals = MEALS.filter(\r\n    (meal) => meal.categoryIds.indexOf(catId) >= 0\r\n  );\r\n\r\n  return <MealList listData={displayedMeals} navigation={props.navigation}/>\r\n\r\n  /*\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text>The Category Meal Screen!</Text>\r\n      <Text>{selectedCategory.title}</Text>\r\n      <Button title=\"Go to Details\" onPress={()=>{\r\n        props.navigation.navigate({routeName:'MealDetail'});\r\n        //props.navigation.navigate('MealDetail');boylede yapılabilirdi aynı sey.yani routenameyte gerek yok.\r\n        //props.navigation.push('MealDetail');pushta navigate gibi ileri sayfaya gitmemizi saglar.farkı ise pushta \r\n        //bu sayfayada gidebiliriz.yani bulundugu sayfaya gidebilir.\r\n      }}/>\r\n      <Button title=\"Go Back\" onPress={()=>{\r\n        props.navigation.goBack();\r\n        //props.navigation.pop();buda goback ile aynı sey.geri gitmemizi sagladı.popun gobackten farkı ise pop sadece stack\r\n        //navigatorda kullanılır.goback tab stack gibi navigatorlerde kullanabliriz.\r\n      }}/>\r\n    </View>\r\n  );*/\r\n};\r\n\r\nCategoryMealsScreen.navigationOptions = (navigationData) => {\r\n  //bunu fonksiyon yapmamızın sebebi selectedcategoriye ulasmak icin!!\r\n  const catId = navigationData.navigation.getParam(\"categoryId\");\r\n\r\n  const selectedCategory = CATEGORIES.find((cat) => cat.id === catId);\r\n\r\n  return {\r\n    headerTitle: selectedCategory.title,\r\n  };\r\n};\r\n\r\n\r\nexport default CategoryMealsScreen;\r\n"]},"metadata":{},"sourceType":"module"}