{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\emre\\\\react-native-ders\\\\r-native-udemy\\\\MealApp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport MealsNavigator from \"./navigation/MealsNavigator\";\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'open-sans': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'open-sans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      onError: console.warn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(MealsNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/emre/react-native-ders/r-native-udemy/MealApp/App.js"],"names":["StatusBar","React","useState","AppLoading","Font","MealsNavigator","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded","console","warn","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAGA,OAAOC,cAAP;;AAIA,IAAMC,UAAU,GAAC,SAAXA,UAAW,GAAI;AACnB,SAAOF,IAAI,CAACG,SAAL,CAAe;AACpB,iBAAYC,OAAO,uCADC;AAEpB,sBAAiBA,OAAO;AAFJ,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEIP,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,MAEtBQ,UAFsB;AAAA,MAEXC,aAFW;;AAI5B,MAAG,CAACD,UAAJ,EAAe;AAEb,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,UADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAIK,aAAa,CAAC,IAAD,CAAjB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAEC,OAAO,CAACC,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';//expo install expo-font ile terminalden eklememiz lazım.\n//import { useScreens } from 'react-native-screens';\n\nimport MealsNavigator from './navigation/MealsNavigator';\n\n//useScreens();\n\nconst fetchFonts=()=>{\n  return Font.loadAsync({\n    'open-sans':require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold':require('./assets/fonts/OpenSans-Bold.ttf'),\n  });\n}\n\nexport default function App() {\n\n  const[fontLoaded,setFontLoaded]=useState(false);\n\n  if(!fontLoaded){//apploading ile resmimiz yuklenmediyse yuklenene kadar buradayız.yani yuklenene kadar alttaki return render\n    //edilmiyor!!!\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={()=>setFontLoaded(true)}\n        onError={console.warn}       \n      />\n    );\n  }\n  return (\n    <MealsNavigator/>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}