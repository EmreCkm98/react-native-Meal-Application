{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\emre\\\\react-native-ders\\\\r-native-udemy\\\\MealApp\\\\screens\\\\FiltersScreen.js\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\n\nvar FilterSwitch = function FilterSwitch(props) {\n  return React.createElement(View, {\n    style: styles.filterContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.label), React.createElement(Switch, {\n    trackColor: {\n      true: Colors.primaryColor\n    },\n    thumbColor: Platform.OS === \"android\" ? Colors.primaryColor : \"\",\n    value: props.state,\n    onValueChange: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar FiltersScreen = function FiltersScreen(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGlutenFree = _useState2[0],\n      setIsGlutenFree = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLactoseFree = _useState4[0],\n      setIsLactoseFree = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isVegan = _useState6[0],\n      setIsVegan = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVegetarian = _useState8[0],\n      setIsVegetarian = _useState8[1];\n\n  var saveFilters = useCallback(function () {\n    var appliedFilters = {\n      glutenFree: isGlutenFree,\n      lactoseFree: isLactoseFree,\n      vegan: isVegan,\n      vegetarian: isVegetarian\n    };\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian]);\n  useEffect(function () {\n    navigation.setParams({\n      save: saveFilters\n    });\n  }, [saveFilters]);\n  return React.createElement(View, {\n    style: StyleSheet.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Available Filters / Restrictions\"), React.createElement(FilterSwitch, {\n    label: \"Gluten-free\",\n    state: isGlutenFree,\n    onChange: function onChange(newValue) {\n      return setIsGlutenFree(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Lactose-free\",\n    state: isLactoseFree,\n    onChange: function onChange(newValue) {\n      return setIsLactoseFree(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Vegan\",\n    state: isVegan,\n    onChange: function onChange(newValue) {\n      return setIsVegan(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Vegetarian\",\n    state: isVegetarian,\n    onChange: function onChange(newValue) {\n      return setIsVegetarian(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nFiltersScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: \"Filter Meals\",\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: \"ios-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Save\",\n        iconName: \"ios-save\",\n        onPress: navData.navigation.getParam('save'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 22,\n    margin: 20,\n    textAlign: \"center\"\n  },\n  filterContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"80%\",\n    marginVertical: 15\n  }\n});\nexport default FiltersScreen;","map":{"version":3,"sources":["C:/Users/emre/react-native-ders/r-native-udemy/MealApp/screens/FiltersScreen.js"],"names":["React","useState","useEffect","useCallback","HeaderButtons","Item","HeaderButton","Colors","FilterSwitch","props","styles","filterContainer","label","true","primaryColor","Platform","OS","state","onChange","FiltersScreen","navigation","isGlutenFree","setIsGlutenFree","isLactoseFree","setIsLactoseFree","isVegan","setIsVegan","isVegetarian","setIsVegetarian","saveFilters","appliedFilters","glutenFree","lactoseFree","vegan","vegetarian","setParams","save","StyleSheet","screen","title","newValue","navigationOptions","navData","headerTitle","headerLeft","toggleDrawer","headerRight","getParam","create","flex","alignItems","fontFamily","fontSize","margin","textAlign","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useCallback } from \"react\";\r\nimport { View, Text, StyleSheet, Switch, Platform } from \"react-native\";\r\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\r\nimport HeaderButton from \"../components/HeaderButton\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst FilterSwitch = (props) => {\r\n  return (\r\n    <View style={styles.filterContainer}>\r\n      <Text>{props.label}</Text>\r\n      <Switch\r\n        trackColor={{ true: Colors.primaryColor }}\r\n        thumbColor={Platform.OS === \"android\" ? Colors.primaryColor : \"\"}\r\n        value={props.state}\r\n        onValueChange={props.onChange}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FiltersScreen = (props) => {\r\n  const {navigation}=props;\r\n\r\n  const [isGlutenFree, setIsGlutenFree] = useState(false);\r\n  const [isLactoseFree, setIsLactoseFree] = useState(false);\r\n  const [isVegan, setIsVegan] = useState(false);\r\n  const [isVegetarian, setIsVegetarian] = useState(false);\r\n\r\n  const saveFilters = useCallback(() => {\r\n    //bir obje olusturduk değerleri tutabilmek icin.stateler degismeden once degerleri tutuyoruz burda.yani kaydediyoreuz.\r\n    //stateler degistiginde useeffect fonku ile bu kaydedilen objeyi setparams ile guncelliyoruz.alt tarafta headerrightta\r\n    //save butonuna tıklanınca getparams ile bu parametreyi alıyoruz.yani kaydedilmis veriyi almış olduk!!\r\n    const appliedFilters = {\r\n      glutenFree: isGlutenFree,\r\n      lactoseFree: isLactoseFree,\r\n      vegan: isVegan,\r\n      vegetarian: isVegetarian,\r\n    };\r\n  },[isGlutenFree,isLactoseFree,isVegan,isVegetarian]);\r\n\r\n  useEffect(() => {\r\n    //üstteki statelerimiz değiştiginde,component her re-render edilginde calısır useefect!!!\r\n    navigation.setParams({ save: saveFilters }); //save adında parametre olusturduk.asagıda getparams()ile cagırcaz.\r\n    //parametreleri guncellemeye yarıyor.ornegin categoriscrende params ile tanımlamıstık.\r\n  },[saveFilters]);\r\n\r\n  return (\r\n    <View style={StyleSheet.screen}>\r\n      <Text style={styles.title}>Available Filters / Restrictions</Text>\r\n      <FilterSwitch\r\n        label=\"Gluten-free\"\r\n        state={isGlutenFree}\r\n        onChange={(newValue) => setIsGlutenFree(newValue)}\r\n      />\r\n      <FilterSwitch\r\n        label=\"Lactose-free\"\r\n        state={isLactoseFree}\r\n        onChange={(newValue) => setIsLactoseFree(newValue)}\r\n      />\r\n      <FilterSwitch\r\n        label=\"Vegan\"\r\n        state={isVegan}\r\n        onChange={(newValue) => setIsVegan(newValue)}\r\n      />\r\n      <FilterSwitch\r\n        label=\"Vegetarian\"\r\n        state={isVegetarian}\r\n        onChange={(newValue) => setIsVegetarian(newValue)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nFiltersScreen.navigationOptions = (navData) => {\r\n  return {\r\n    headerTitle: \"Filter Meals\",\r\n    headerLeft:()=> (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Menu\"\r\n          iconName=\"ios-menu\"\r\n          onPress={() => {\r\n            navData.navigation.toggleDrawer();\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n    headerRight:()=> (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Save\"\r\n          iconName=\"ios-save\"\r\n          onPress={\r\n            navData.navigation.getParam('save')\r\n          }\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontFamily: \"open-sans-bold\",\r\n    fontSize: 22,\r\n    margin: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  filterContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n    marginVertical: 15,\r\n  },\r\n});\r\n\r\nexport default FiltersScreen;\r\n"]},"metadata":{},"sourceType":"module"}